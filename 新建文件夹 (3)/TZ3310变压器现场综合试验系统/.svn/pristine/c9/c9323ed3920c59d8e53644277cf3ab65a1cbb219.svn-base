using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media.Imaging;
using SCEEC.Numerics;

namespace SCEEC.MI.TZ3310
{
    public static class MeasurementInterface
    {

        static ClassTz3310 TZ3310 = new ClassTz3310();
        static GetParameter GetPra = new GetParameter();
        public static MeasurementResult DoMeasurement(ref MeasurementItemStruct mi, Transformer transformer, JobList Job)
        {
            switch (mi.Function)
            {
                case MeasurementFunction.DCInsulation:
                    TestFunction.DoDCInsulation(ref mi, transformer, Job);
                    break;
                case MeasurementFunction.Capacitance:
                    TestFunction.Capacitance(ref mi, transformer, Job);
                    break;
                case MeasurementFunction.DCResistance://直流电阻
                    TestFunction.DCResistance(ref mi, transformer, Job);
                    break;
                case MeasurementFunction.BushingDCInsulation:
                    TestFunction.BushingDCInsulation(ref mi, transformer, Job);
                    break;
                case MeasurementFunction.BushingCapacitance:
                    TestFunction.BushingCapacitance(ref mi, transformer, Job);
                    break;
                case MeasurementFunction.OLTCSwitchingCharacter:
                    TestFunction.OLTCSwitchingCharacter(ref mi, transformer, Job);
                    break;
                case MeasurementFunction.DCCharge://充电

                    break;
                case MeasurementFunction.Description:
                    mi.completed = true;
                    break;
            }
            return null;
        }



        public static void DoWork(ref TestingWorkerSender sender)
        {
            DoMeasurement(ref sender.MeasurementItems[sender.CurrentItemIndex], sender.Transformer, sender.job);
            sender.StatusText = sender.MeasurementItems[sender.CurrentItemIndex].stateText;
            if (sender.CurrentItemIndex >= sender.MeasurementItems.Length)
                TZ3310.ShutDownOutCurrent(0);

        }


        public static bool CancelWork(ref TestingWorkerSender sender)
        {
            if (sender.MeasurementItems[sender.CurrentItemIndex].Function == MeasurementFunction.DCResistance ||
               sender.MeasurementItems[sender.CurrentItemIndex].Function == MeasurementFunction.OLTCSwitchingCharacter)
            {

                if (true == TZ3310.ShutDownOutCurrent(0))
                {
                    string[] OutData = TZ3310.ReadTestData(Parameter.TestKind.读取放电数据);
                    if (OutData != null)
                    {
                        if (OutData[0] == "2")
                        {
                            sender.StatusText = "放电完成";
                            return true;
                        }
                        else
                        {
                            sender.StatusText = "正在放电中...";
                            return false;
                        }
                    }
                }
                else
                {
                    sender.StatusText = "关闭电流输出失败";
                    return false;

                }

            }

            else
            {
                if (true == TZ3310.InterRuptMe(Parameter.CommanTest.仪器复位))
                {
                    sender.StatusText = "仪器复位成功";
                    return true;
                }
                else
                    return false;

            }

            return false;
        }
    }
}

